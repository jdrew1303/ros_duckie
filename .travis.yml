sudo: true
dist: xenial
language: minimal

# where the magic happens
services:
  - docker
addons:
  apt:
    packages:
      - docker-ce

# Only clone the most recent commit.
git:
  depth: 1

# skip the install step
install: true

# You can run a program compiled for ARM on amd64 linux machine 
# if it has binfmt_misc support. It essentially allows you to 
# run a program without worrying about which architecture it was 
# built for.
before_install:
  - sudo docker run --privileged linuxkit/binfmt:v0.6
  - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform linux/armhf
  - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
  - export BUILDKIT_HOST=tcp://0.0.0.0:1234
script:
  # login to docker hub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # get the name for our tag (short commit id)
  - if [ $TRAVIS_PULL_REQUEST ]; then export BRANCH_NAME=$TRAVIS_PULL_REQUEST_BRANCH; else export BRANCH_NAME=TRAVIS_BRANCH; fi
  - export IMAGE_TAG="$TRAVIS_REPO_SLUG:$BRANCH_NAME"
  - export GIT_COMMIT_AUTHOR=$(git --no-pager show -s --format='%an <%ae>' $TRAVIS_COMMIT)
  # do a cross build for arm and push to docker hub
  - buildctl build --frontend dockerfile.v0 --frontend-opt build-arg:GIT_COMMIT=$TRAVIS_COMMIT --frontend-opt build-arg:GIT_COMMIT_AUTHOR=$GIT_COMMIT_AUTHOR --local dockerfile=. --local context=. --exporter image --exporter-opt name=docker.io/${IMAGE_TAG} --exporter-opt push=true --frontend-opt platform=linux/armhf --frontend-opt filename=./Dockerfile
  # create a manifest file
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - docker manifest create ${IMAGE_TAG} ${IMAGE_TAG}
  - docker manifest annotate ${IMAGE_TAG} ${IMAGE_TAG} --arch arm
  - docker manifest push ${IMAGE_TAG}

# There are just too many emails from travis :/
notifications:
  email: false