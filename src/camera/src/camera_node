#!/usr/bin/env python
import rospy
import cv2
import os

from sensor_msgs.msg import CompressedImage

# we need to add this to have raspberry pi expose the camera as a usb camera
os.system('sudo modprobe bcm2835-v4l2') 

CAMERA = cv2.VideoCapture(0)
CAMERA.set(cv2.CAP_PROP_FRAME_WIDTH, 160)
CAMERA.set(cv2.CAP_PROP_FRAME_HEIGHT, 100)

def publish_image_to_topic(timer_event):
        CAMERA_NODE_PUBLISHER = rospy.Publisher("~image", CompressedImage, queue_size=1)
        # fetch the current image from the camera
        (grabbed, frame) = stream.read()

        # build message
        message = CompressedImage()
        message.data = frame
        message.format = "jpeg"
        message.header.stamp = rospy.Time.now()
            
        # publish new image to the topic
        CAMERA_NODE_PUBLISHER.publish(message)

def cleanup_on_shutdown():
    CAMERA.release()
    cv2.destroyAllWindows()

if __name__ == '__main__':
    # this is the business end of the node
    rospy.init_node('camera', anonymous=False)
    rospy.on_shutdown(cleanup_on_shutdown)
    CAMERA_FRAMERATE = 20.0
    FPS_TO_CAPTURE = rospy.Duration.from_sec(1.0/CAMERA_FRAMERATE)
    MAIN_CAMERA_LOOP = rospy.Timer(FPS_TO_CAPTURE, publish_image_to_topic)
    rospy.spin()